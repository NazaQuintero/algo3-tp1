TestCase subclass: #BurbujaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1-Tests'!!BurbujaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 22:30'!test01PorDefectoLaBurbujaNoEstaPinchada	|unaBurbuja persona1 persona2 persona3|		unaBurbuja := Burbuja conNombre: 'Setnasrucer Sel'. 		persona1 := Persona conNombre: 'Federico'.	persona2 := Persona conNombre: 'Leon'.	persona3 := Persona conNombre: 'Samuel'.		unaBurbuja agregarPersona: persona1.	unaBurbuja agregarPersona: persona2.	unaBurbuja agregarPersona: persona3.		persona1 estaVacunadx .	persona2 estaVacunadx .	persona3 estaVacunadx .		self deny: unaBurbuja estaPinchada.	! !!BurbujaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 22:32'!test02SiAlguienEnLaBurbujaEsUnCasoConfirmadoEntoncesLaBurbujaEstaPinchada	|unaBurbuja persona1 persona2 persona3|		unaBurbuja := Burbuja conNombre: 'Les Recursantes'.		persona1 := Persona conNombre: 'Augusto'.	persona2 := Persona conNombre: 'Leandro'.	persona3 := Persona conNombre: 'Ezequiel'.		unaBurbuja agregarPersona: persona1.	unaBurbuja agregarPersona: persona2.	unaBurbuja agregarPersona: persona3.		persona1 estaVacunadx .	persona2 estaVacunadx .	persona3 estaVacunadx .		persona1 agregarSintoma: 'FieBrE'.	persona1 agregarSintoma: 'DOLOr De CABEza'.	persona1 agregarSintoma: 'DIArrea'.		self assert: persona1 diagnostico equals: 'Positivo'.		self assert: unaBurbuja estaPinchada.		self deny: persona2 puedeCircular.	self deny: persona3 puedeCircular.	! !TestCase subclass: #ColegioTest	instanceVariableNames: 'unColegio'	classVariableNames: ''	package: 'TP1-Tests'!!ColegioTest methodsFor: 'tests' stamp: 'NazaQuintero 5/18/2021 22:02'!test02UnColegioTieneClasesPresencialesSiTodasLasBurbujasNoEstanPinchadas	unColegio agregarBurbuja: (Burbuja conNombre: 'ApaYCan').		self assert: unColegio tieneClasesPresenciales .! !!ColegioTest methodsFor: 'tests' stamp: 'NazaQuintero 5/18/2021 21:49'!test01PorDefectoUnColegioNoTieneClasesPresenciales	self deny: unColegio tieneClasesPresenciales .! !!ColegioTest methodsFor: 'running' stamp: 'NazaQuintero 5/17/2021 23:43'!setUp	unColegio := Colegio conNombre: 'Nacional Buenos Aires'.! !TestCase subclass: #ConjuntoDeBurbujasTest	instanceVariableNames: 'conjuntoDeBurbujas'	classVariableNames: ''	package: 'TP1-Tests'!!ConjuntoDeBurbujasTest methodsFor: 'as yet unclassified' stamp: 'NazaQuintero 5/17/2021 23:34'!test01SiLaBurbujaNoPerteneceAlConjuntoLanzaUnaExcepcion	self should: [conjuntoDeBurbujas obtenerBurbuja: 'La Burbruja'] raise: BurbujaNoEncontradaException.! !!ConjuntoDeBurbujasTest methodsFor: 'running' stamp: 'NazaQuintero 5/19/2021 17:49'!setUp	conjuntoDeBurbujas := Burbujas new.! !TestCase subclass: #ConjuntoDeColegiosTest	instanceVariableNames: 'conjuntoDeColegios'	classVariableNames: ''	package: 'TP1-Tests'!!ConjuntoDeColegiosTest methodsFor: 'running' stamp: 'NazaQuintero 5/19/2021 17:49'!setUp	conjuntoDeColegios := Colegios new.! !!ConjuntoDeColegiosTest methodsFor: 'as yet unclassified' stamp: 'NazaQuintero 5/17/2021 20:38'!test01SiElColegioNoPerteneceAlConjuntoLanzaUnaExcepcion	self should: [conjuntoDeColegios obtenerColegio: 'ESCCP'] raise: ColegioNoEncontradoException.! !TestCase subclass: #ConjuntoDePersonasTest	instanceVariableNames: 'conjuntoDePersonas'	classVariableNames: ''	package: 'TP1-Tests'!!ConjuntoDePersonasTest methodsFor: 'running' stamp: 'NazaQuintero 5/19/2021 17:49'!setUp	conjuntoDePersonas := Personas new.! !!ConjuntoDePersonasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:30'!test01SiSeDeniegaLaCirculacionACadaPersonaNingunxPuedeCircular	|persona1 persona2 persona3|		persona1 := Persona conNombre: 'Palermo'.	persona2 := Persona conNombre: 'Wanchope'.	persona3 := Persona conNombre: 'Riquelme'.		persona1 estaVacunadx .	persona2 estaVacunadx .	persona3 estaVacunadx .		conjuntoDePersonas agregarPersona: persona1.	conjuntoDePersonas agregarPersona: persona2.	conjuntoDePersonas agregarPersona: persona3.		conjuntoDePersonas denegarCirculacionATodxsLasPersonas .		self deny: persona1 puedeCircular.	self deny: persona2 puedeCircular.	self deny: persona3 puedeCircular.		! !!ConjuntoDePersonasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:30'!test02SiLaPersonaNoPerteneceAlConjuntoLanzaUnaExcepcion	self should: [conjuntoDePersonas obtenerPersona: 'Rogelio'] raise: PersonaNoEncontradaException.		! !TestCase subclass: #CreadorDeSintomaTest	instanceVariableNames: 'creadorDeSintoma'	classVariableNames: ''	package: 'TP1-Tests'!!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test08CreadorDeSintomaLanzaExcepcionDeSintomaDesconocidoAnteSintomaNoContemplado	self should: [creadorDeSintoma crearSintoma: 'PÉRDIda de CabEZA'] raise: SintomaDesconocidoException.! !!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test04CreadorDeSintomaCreaDiarrea	|sintoma|	sintoma:= creadorDeSintoma crearSintoma: 'diARrea' .		self assert: (sintoma nombre) equals: 'Diarrea'.! !!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test01CreadorDeSintomaCreaFiebre	|sintoma|	sintoma:= creadorDeSintoma crearSintoma: 'fIeBrE' .		self assert: (sintoma nombre) equals: 'Fiebre'.! !!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test02CreadorDeSintomaCreaTos	|sintoma|	sintoma:= creadorDeSintoma crearSintoma: 'toS' .		self assert: (sintoma nombre) equals: 'Tos'.! !!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test06CreadorDeSintomaCreaDolorDeCabeza	|sintoma|	sintoma:= creadorDeSintoma crearSintoma: 'dolOR de cabEZa' .		self assert: (sintoma nombre) equals: 'Dolor de cabeza'.! !!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test07CreadorDeSintomaCreaPerdidaDelGusto	|sintoma|	sintoma:= creadorDeSintoma crearSintoma: 'PÉRDIda del GUStO' .		self assert: (sintoma nombre) equals: 'Pérdida del gusto'.! !!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test03CreadorDeSintomaCreaCansancio	|sintoma|	sintoma:= creadorDeSintoma crearSintoma: 'CANsanCiO' .		self assert: (sintoma nombre) equals: 'Cansancio'.! !!CreadorDeSintomaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:05'!test05CreadorDeSintomaCreaDolorDeGarganta	|sintoma|	sintoma:= creadorDeSintoma crearSintoma: 'dolOR DE GargANTA' .		self assert: (sintoma nombre) equals: 'Dolor de garganta'.! !!CreadorDeSintomaTest methodsFor: 'running' stamp: 'NazaQuintero 5/17/2021 21:04'!setUp	creadorDeSintoma := CreadorDeSintoma new.! !TestCase subclass: #PersonaDeRiesgoTest	instanceVariableNames: 'personaDeRiesgo'	classVariableNames: ''	package: 'TP1-Tests'!!PersonaDeRiesgoTest methodsFor: 'running' stamp: 'NazaQuintero 5/18/2021 22:12'!setUp	personaDeRiesgo := PersonaDeRiesgo new.! !!PersonaDeRiesgoTest methodsFor: 'tests' stamp: 'NazaQuintero 5/18/2021 22:13'!test01UnaPersonaDeRiesgoNoPuedeCircular	self deny: personaDeRiesgo puedeCircular .! !!PersonaDeRiesgoTest methodsFor: 'as yet unclassified' stamp: 'NazaQuintero 5/18/2021 22:13'!test02UnaPersonaDeRiesgoEsDeRiesgo	self assert: personaDeRiesgo esDeRiesgo .! !TestCase subclass: #PersonaTest	instanceVariableNames: 'unaPersona otraPersona'	classVariableNames: ''	package: 'TP1-Tests'!!PersonaTest methodsFor: 'running' stamp: 'NazaQuintero 5/17/2021 21:35'!setUp	unaPersona := Persona conNombre: 'Pablito'.	otraPersona := Persona conNombre: 'Pedrito'.! !!PersonaTest methodsFor: 'as yet unclassified' stamp: 'NazaQuintero 5/17/2021 21:43'!test18SiAPersonaSeLeDeniegaCirculacionNoPuedeCircular	unaPersona denegarCirculacion.		self deny: (unaPersona puedeCircular).! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:37'!test02UnaPersonaPorDefectoNoPuedeCircular	self deny: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:40'!test14PersonaEnContactoEstrechoConPositivoNoPuedeCircular	otraPersona agregarSintoma: 'Dolor de Garganta'.	otraPersona agregarSintoma: 'Tos'.	otraPersona agregarSintoma: 'Fiebre'.		self assert: (otraPersona diagnostico) equals: 'Positivo'.		unaPersona contactoEstrechoCon: otraPersona .		self deny: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:41'!test01SeCreaUnaPersonaConNombre	self assert: ((Persona conNombre: 'Juan') nombre) equals: 'Juan'.! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:37'!test05UnaPersonaPorDefectoEstaSinDiagnostico		 self assert: (unaPersona diagnostico) equals: 'Sin diagnostico' .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:39'!test11SiEsPersonalEsencialPuedeCircular	unaPersona esPersonalEsencial .		self assert: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:39'!test10SiTiene2SintomasNoHabitualesY1HabitualEsPositivo	unaPersona agregarSintoma: 'Diarrea'.	unaPersona agregarSintoma: 'Dolor De Cabeza'.	unaPersona agregarSintoma: 'Tos'.		self assert: (unaPersona diagnostico) equals: 'Positivo'.! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:37'!test04UnaPersonaVacunadxPuedeCircular	unaPersona estaVacunadx .		self assert: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:39'!test12SiEsPersonalEsencialConSintomaNoPuedeCircular	unaPersona esPersonalEsencial .		unaPersona agregarSintoma: 'Dolor de Garganta'.		self deny: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:38'!test09SiTiene3SintomasNoHabitualesEsSospechoso	unaPersona agregarSintoma: 'Diarrea'.	unaPersona agregarSintoma: 'Dolor De Cabeza'.	unaPersona agregarSintoma: 'Dolor de Garganta'.		self assert: (unaPersona diagnostico) equals: 'Sospechoso'.! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:40'!test13PersonaEnContactoEstrechoConSospechosoNoPuedeCircular	otraPersona agregarSintoma: 'Dolor de Garganta'.		self assert: (otraPersona diagnostico) equals: 'Sospechoso'.		unaPersona contactoEstrechoCon: otraPersona .		self deny: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:38'!test08SiTiene4SintomasEsCovidPositivo	unaPersona agregarSintoma: 'Diarrea'.	unaPersona agregarSintoma: 'Dolor De Cabeza'.	unaPersona agregarSintoma: 'Fiebre'.	unaPersona agregarSintoma: 'Tos'.		self assert: (unaPersona diagnostico) equals: 'Positivo'.! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:38'!test07SiEsSospechosoNoPuedeCircular	unaPersona agregarSintoma: 'Tos' .		self assert: (unaPersona diagnostico ) equals: 'Sospechoso'.		self deny: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:37'!test06SiTiene1o2SintomasEsSospechoso	unaPersona agregarSintoma: 'Fiebre'.		self assert: (unaPersona diagnostico) equals: 'Sospechoso'.! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:41'!test16PersonaDeRiesgoNoPuedeCircularPorMasQueEsteVacunadx	unaPersona estaVacunadx.	unaPersona esPersonaDeRiesgo.	self deny: (unaPersona puedeCircular).! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:40'!test15PersonaEnContactoEstrechoConPersonaQuePuedeCircularTambienPuedeCircular	otraPersona esPersonalEsencial .		self assert: otraPersona puedeCircular .		unaPersona estaVacunadx .	unaPersona contactoEstrechoCon: otraPersona .		self assert: unaPersona puedeCircular .! !!PersonaTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 21:41'!test17PersonalEsencialYDeRiesgoNoPuedeCircular	unaPersona esPersonaDeRiesgo.	unaPersona esPersonalEsencial.		self deny: (unaPersona puedeCircular).! !TestCase subclass: #SintomasTest	instanceVariableNames: 'conjuntoDeSintomas'	classVariableNames: ''	package: 'TP1-Tests'!!SintomasTest methodsFor: 'running' stamp: 'NazaQuintero 5/19/2021 17:49'!setUp	conjuntoDeSintomas := Sintomas new.! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:21'!test09PorDefectoLosSintomasPermitenCircular	self assert: (conjuntoDeSintomas puedeCircular).! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:22'!test10SiHay1SoloSintomaNoPermiteCircular	conjuntoDeSintomas agregarSintoma: 'Fiebre'.		self deny: (conjuntoDeSintomas puedeCircular).! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:18'!test01PorDefectoLaCantidadDeSintomasEsCero	self assert: (conjuntoDeSintomas cantidad) equals: 0.! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:19'!test03SintomaTosEsHabitual		conjuntoDeSintomas agregarSintoma: 'Tos'.		self assert: (conjuntoDeSintomas haySintomaHabitual).! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:21'!test08SintomaDolorDeGargantaNoEsHabitual	conjuntoDeSintomas agregarSintoma: 'Dolor de garganta'.		self assert: (conjuntoDeSintomas cantidad) equals: 1.	self deny: (conjuntoDeSintomas haySintomaHabitual).! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:20'!test04SintomaFiebreEsHabitual	conjuntoDeSintomas agregarSintoma: 'Fiebre'.		self assert: (conjuntoDeSintomas haySintomaHabitual).! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:21'!test07SintomaPerdidaDelGustoNoEsHabitual	conjuntoDeSintomas agregarSintoma: 'Pérdida del gusto'.		self assert: (conjuntoDeSintomas cantidad) equals: 1.	self deny: (conjuntoDeSintomas haySintomaHabitual).! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:20'!test05SintomaCansancioEsHabitual	conjuntoDeSintomas agregarSintoma: 'Cansancio'.		self assert: (conjuntoDeSintomas haySintomaHabitual).! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:19'!test02AlAgregar1SintomaLaCantidadEs1	conjuntoDeSintomas agregarSintoma: 'Fiebre'.		self assert: (conjuntoDeSintomas cantidad) equals: 1.! !!SintomasTest methodsFor: 'tests' stamp: 'NazaQuintero 5/17/2021 20:20'!test06SintomaDiarreaNoEsHabitual	conjuntoDeSintomas agregarSintoma: 'Diarrea'.		self assert: (conjuntoDeSintomas cantidad) equals: 1.	self deny: (conjuntoDeSintomas haySintomaHabitual).! !